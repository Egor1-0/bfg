from aiogram import Router, F
from aiogram.types import Message

from app.database.queries import increanse_bank, deincreanse, increanse, deincreanse_bank, get_bank
from app.filters import CheckBankMoney

bank_router = Router()


bank_router.message.filter(F.text.lower().startswith('–±–∞–Ω–∫'))

bank_router.message.filter(CheckBankMoney())
# bank_router.message.filter(CheckLimit())

@bank_router.message(F.text.lower().contains('–ø–æ–ª–æ–∂–∏—Ç—å'))
async def error(message: Message):
    await increanse_bank(message.from_user.id, int(message.text.split(" ")[2]))
    await deincreanse(int(message.text.split(" ")[2]), message.from_user.id)
    await message.answer("–ü–æ–ª–æ–∂–µ–Ω–æ –≤ –±–∞–Ω–∫")


@bank_router.message(F.text.lower().contains('—Å–Ω—è—Ç—å'))
async def error(message: Message):
    bank_comission = (await get_bank(message.from_user.id)).comission 
    await deincreanse_bank(message.from_user.id, int(message.text.split(" ")[2]))
    await increanse(int(message.text.split(" ")[2]) * (100 - bank_comission) / 100, 
                    message.from_user.id)
    await message.answer("–ü–æ–ª–æ–∂–µ–Ω–æ –≤ –≤–∞–º –Ω–∞ —Å—á–µ—Ç")


# @bank_router.message(LenInputData(), DateValue())
# async def give_money_handler(message: Message):
#     if message.reply_to_message is None: #–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
#         await message.answer("–ß—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏, –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üòû")
#         return
#     user = await get_user(message.from_user.id)
#     amount = int(message.text.split(" ")[1])
#     if user.limit >= amount: #–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø–µ—Ä–µ–≤–µ–ª –ª–∏ —á–µ–ª–æ–≤–µ–∫ –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –º–æ–∂–µ—Ç
#         await increanse(amount, message.reply_to_message.from_user.id)
#         await deincreanse(amount, message.from_user.id)
#         await limit_user(message.from_user.id, amount)
#         await push_transferred(message.from_user.id, amount)
#         await message.reply_to_message.answer(
#             f"‚úÖ | {amount} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.reply_to_message.from_user.full_name}!"
#         )
#     else:
#         await message.answer(f"‚ö†Ô∏è | –í–∞—à –ª–∏–º–∏—Ç : {user.limit}")
