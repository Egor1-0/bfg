from aiogram import Router, F, Bot
from aiogram.types import Message

from app.filters import LenInputGame, RateValue
from app.database.queries import increanse

darts_router = Router()

darts_router.message.filter(F.text.lower().startswith('–¥–∞—Ä—Ç—Å'))

@darts_router.message(~LenInputGame())
async def uncorrect_input(message: Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ: –¥–∞—Ä—Ç—Å <—Ü–∏—Ñ—Ä–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Å—Ç–∞–≤–∏—Ç–µ> <–≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞>')


@darts_router.message(~RateValue())
async def uncorrect_input(message: Message):
    await message.answer('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 10')


@darts_router.message(LenInputGame(), RateValue())
async def cube(message: Message, bot: Bot): 
        mes = await bot.send_dice(chat_id=message.chat.id, emoji='üéØ')
        if mes.dice.value in [2, 3, 4, 5, 6]:
            winning = (0 if mes.dice.value in [2, 3] else int(message.text.split(' ')[1])*(mes.dice.value - 3))
            await increanse(winning, message.from_user.id)
            await message.answer(f"–í—ã –ø–æ–ø–∞–ª–∏. –≤–∞—à –≤—ã–∏–≥—Ä—ã—à: {winning}")
        else:
            await message.answer("–í—ã –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å")