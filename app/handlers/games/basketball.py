import random
from aiogram import Router, F, Bot
from aiogram.types import Message

from app.filters import LenInputData, DateValue
from app.database.queries import increanse, deincreanse

from app.src.emoji_list import *


basketball_router = Router()

basketball_router.message.filter(F.text.lower().startswith('–±–∞—Å–∫–µ—Ç–±–æ–ª'))


@basketball_router.message(~LenInputData())
async def uncorrect_input(message: Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ: –∫—É–±–∏–∫ <—Ü–∏—Ñ—Ä–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Å—Ç–∞–≤–∏—Ç–µ> <–≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞>')


@basketball_router.message(~DateValue())
async def uncorrect_input(message: Message):
    await message.answer('–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º –æ—Ç 10')


@basketball_router.message(LenInputData(), DateValue())
async def cube(message: Message, bot: Bot): 
        mes = await bot.send_dice(chat_id=message.chat.id, emoji='üèÄ')
        if mes.dice.value in [4, 5]: #–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø–∞–¥–∞–Ω–∏—è
            winning = int(message.text.split(' ')[1]) * (mes.dice.value - 3)
            await increanse(winning, message.from_user.id)
            await message.answer(f"üéÅ | {message.from_user.first_name} –í—ã –ø–æ–ø–∞–ª–∏! \n  üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ {winning}$")
        else:
            losser = int(message.text.split(' ')[1])
            await deincreanse(losser, message.from_user.id)
            randoms = random.choice(sad_emoji) #—Å–ª—É—á–∞–π–Ω—ã–π –≥—Ä—É—Å—Ç–Ω—ã–π —ç–º–æ–¥–∑–∏
            await message.answer(f" {randoms} | –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {losser}$")