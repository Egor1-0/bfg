from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import or_f

from app.filters import LenInputData, DateValue
from app.database.queries import increanse, deincreanse, limit_user, get_user, push_transferred
from app.filters import CheckMoney, CheckLimit

gift_router_enough = Router()


gift_router_enough.message.filter(F.text.lower().startswith('–¥–∞—Ç—å'))

gift_router_enough.message.filter(CheckMoney())
gift_router_enough.message.filter(CheckLimit())

@gift_router_enough.message(or_f(~LenInputData(), ~DateValue()))
async def error(message: Message):
    await message.answer('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É: —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 10')


@gift_router_enough.message(LenInputData(), DateValue())
async def give_money_handler(message: Message):
    if message.reply_to_message is None: #–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è
        await message.answer("–ß—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏, –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üòû")
        return
    user = await get_user(message.from_user.id)
    amount = int(message.text.split(" ")[1])
    if user.limit >= amount: #–ø—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –ø–µ—Ä–µ–≤–µ–ª –ª–∏ —á–µ–ª–æ–≤–µ–∫ –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ —á–µ–º –º–æ–∂–µ—Ç
        await increanse(amount, message.reply_to_message.from_user.id)
        await deincreanse(amount, message.from_user.id)
        await limit_user(message.from_user.id, amount)
        await push_transferred(message.from_user.id, amount)
        await message.reply_to_message.answer(
            f"‚úÖ | {amount} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.reply_to_message.from_user.full_name}!"
        )
    else:
        await message.answer(f"‚ö†Ô∏è | –í–∞—à –ª–∏–º–∏—Ç : {user.limit}")
