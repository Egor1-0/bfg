import random
from aiogram import Router, F
from aiogram.types import Message

from app.filters import LenInputData, DateValue
from app.database.queries import increanse, deincreanse
from app.database.queries.requests import get_user
from app.middlewares import CheckMoney

base_router = Router()

base_router.message.outer_middleware(CheckMoney())

base_router.message.filter(F.text.lower().startswith('–¥–∞—Ç—å'))


@base_router.message(~LenInputData() or ~DateValue())
async def error(message: Message):
    await message.answer('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É: —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 10')


@base_router.message(LenInputData(), DateValue())
async def give_money_handler(message: Message):
    if message.reply_to_message is None:
        await message.answer("–ß—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏, –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è üòû")
        return
    amount = int(message.text.split(" ")[1])
    await increanse(amount, message.reply_to_message.from_user.id)
    await deincreanse(amount, message.from_user.id)


    await message.reply_to_message.answer(
        f"‚úÖ | {amount} —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.reply_to_message.from_user.full_name}!"
    )
